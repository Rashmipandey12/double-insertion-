#include <stdio.h>
#include<stdlib.h>
typedef struct node{
    int data;
    struct node*prev;
    struct node*next;
}*NODE;

NODE createnode(int data){
NODE new=(NODE)malloc(sizeof(struct node));
if(new==NULL)
{
  printf("no memory allocation");
}
new->data=data;
new->prev=NULL;
new->next=NULL;
return new;
}
void display(NODE head){
  NODE temp=head;
while(temp!=NULL){
    printf("%d",temp->data);
    temp=temp->next;
  }
}
NODE insertatbeg(NODE head,int data){
  NODE new=createnode(data);
  if(head==NULL){
    return new;
  }
  new->next=head;
  head->prev=new;
  head=new;
  return head;
}
NODE insertatend(NODE head,int data){
  NODE new=createnode(data);
  NODE temp;
  if(head==NULL){
    return new;
  }
  temp=head;
  while(temp->next!=NULL){
      temp=temp->next;
  }
  temp->next=new;
  new->prev=temp;
  return head;
  }
  NODE insertatpos(NODE head,int pos,int data){
  NODE new=createnode(data);
  NODE temp;
  int count;
  if(head==NULL){
    return new;
  }
  if(pos==1){
      new->next=head;
      head->prev=new;
      head=new;
      return head;
  }
  temp=head;
   count=1;
  while(count<pos-1){
      temp=temp->next;
      count++;
  }
  if(temp->next==NULL){
    temp->next=new;
    new->prev=temp;
    return head;
  }
 new->next=temp->next;
 temp->next->prev=new;
 temp->next=new;
 new->prev=temp;
  }

int main(){
  NODE head=NULL;
  int data;
  int pos;
  head=insertatbeg(head,10);
  head=insertatend(head, 20);
  head=insertatpos(head,1,70);
  display(head);
  return 0;

}